{
  "_id": {
    "$oid": "6071e3a143dd71267de1c494"
  },
  "assignees": [
    {
      "gists_url": "https://api.github.com/users/webyneter/gists{/gist_id}",
      "repos_url": "https://api.github.com/users/webyneter/repos",
      "following_url": "https://api.github.com/users/webyneter/following{/other_user}",
      "starred_url": "https://api.github.com/users/webyneter/starred{/owner}{/repo}",
      "login": "webyneter",
      "followers_url": "https://api.github.com/users/webyneter/followers",
      "type": "User",
      "url": "https://api.github.com/users/webyneter",
      "subscriptions_url": "https://api.github.com/users/webyneter/subscriptions",
      "received_events_url": "https://api.github.com/users/webyneter/received_events",
      "avatar_url": "https://avatars.githubusercontent.com/u/2845133?v=4",
      "events_url": "https://api.github.com/users/webyneter/events{/privacy}",
      "html_url": "https://github.com/webyneter",
      "site_admin": false,
      "id": 2845133,
      "gravatar_id": "",
      "node_id": "MDQ6VXNlcjI4NDUxMzM=",
      "organizations_url": "https://api.github.com/users/webyneter/orgs"
    }
  ],
  "created_at": "2018-09-19T17:45:52Z",
  "title": "Pin base Docker images up to bugfix releases",
  "body": "## Description\r\n\r\n[//]: # (What's it you're proposing? How should it be implemented?)\r\n\r\n`django` and other Docker Compose service images' base image versions **must be pinned to the corresponding bugfix releases** i.e. pinned down to the maximum attainable semver depth.\r\n\r\n## Rationale\r\n\r\n[//]: # (Why should this feature be implemented?)\r\n\r\nI've just been racking my brains trying to figure out why one of my project's Docker Compose stack has been failing with weird erros while exactly the same git state was successfully reproduced on my fellow teammates' machine hassle-free. Eventually, I figured out the app's image was relying upon `python:3.6-alpine` as base image -- the one I already had pulled to my host about a year ago. By contrast, some other developers' machines had been wiped out clean beforehand, with all the Docker images pulled in fresh afterwards. Hence, their local setups had been using the now-latest `python:3.6.6-alpine3.8` while my pre-existing `python:3.6-alpine`-matching base image was 9 months old.\r\n\r\nAnticipating the possible objection on pinning minors rather than patches due to automatic pulling of bugfix releases -- what I've stumbled upon here renders such concerns irrelevant; besides, there is a number of automatic dependency management solutions, like pyup or dependencies.io allowing to strategize upgrade policies in explicit rather than implicit manner.",
  "labels_url": "https://api.github.com/repos/pydanny/cookiecutter-django/issues/1810/labels{/name}",
  "author_association": "COLLABORATOR",
  "number": 1810,
  "score": 1,
  "updated_at": "2019-05-25T09:05:07Z",
  "performed_via_github_app": null,
  "comments_url": "https://api.github.com/repos/pydanny/cookiecutter-django/issues/1810/comments",
  "active_lock_reason": null,
  "repository_url": "https://api.github.com/repos/pydanny/cookiecutter-django",
  "id": 361856300,
  "state": "open",
  "locked": false,
  "comments": 4,
  "closed_at": null,
  "url": "https://api.github.com/repos/pydanny/cookiecutter-django/issues/1810",
  "labels": [
    {
      "default": false,
      "color": "c5def5",
      "name": "docker",
      "description": null,
      "id": 389456766,
      "url": "https://api.github.com/repos/pydanny/cookiecutter-django/labels/docker",
      "node_id": "MDU6TGFiZWwzODk0NTY3NjY="
    }
  ],
  "milestone": null,
  "events_url": "https://api.github.com/repos/pydanny/cookiecutter-django/issues/1810/events",
  "html_url": "https://github.com/pydanny/cookiecutter-django/issues/1810",
  "assignee": {
    "gists_url": "https://api.github.com/users/webyneter/gists{/gist_id}",
    "repos_url": "https://api.github.com/users/webyneter/repos",
    "following_url": "https://api.github.com/users/webyneter/following{/other_user}",
    "starred_url": "https://api.github.com/users/webyneter/starred{/owner}{/repo}",
    "login": "webyneter",
    "followers_url": "https://api.github.com/users/webyneter/followers",
    "type": "User",
    "url": "https://api.github.com/users/webyneter",
    "subscriptions_url": "https://api.github.com/users/webyneter/subscriptions",
    "received_events_url": "https://api.github.com/users/webyneter/received_events",
    "avatar_url": "https://avatars.githubusercontent.com/u/2845133?v=4",
    "events_url": "https://api.github.com/users/webyneter/events{/privacy}",
    "html_url": "https://github.com/webyneter",
    "site_admin": false,
    "id": 2845133,
    "gravatar_id": "",
    "node_id": "MDQ6VXNlcjI4NDUxMzM=",
    "organizations_url": "https://api.github.com/users/webyneter/orgs"
  },
  "user": {
    "gists_url": "https://api.github.com/users/webyneter/gists{/gist_id}",
    "repos_url": "https://api.github.com/users/webyneter/repos",
    "following_url": "https://api.github.com/users/webyneter/following{/other_user}",
    "starred_url": "https://api.github.com/users/webyneter/starred{/owner}{/repo}",
    "login": "webyneter",
    "followers_url": "https://api.github.com/users/webyneter/followers",
    "type": "User",
    "url": "https://api.github.com/users/webyneter",
    "subscriptions_url": "https://api.github.com/users/webyneter/subscriptions",
    "received_events_url": "https://api.github.com/users/webyneter/received_events",
    "avatar_url": "https://avatars.githubusercontent.com/u/2845133?v=4",
    "events_url": "https://api.github.com/users/webyneter/events{/privacy}",
    "html_url": "https://github.com/webyneter",
    "site_admin": false,
    "id": 2845133,
    "gravatar_id": "",
    "node_id": "MDQ6VXNlcjI4NDUxMzM=",
    "organizations_url": "https://api.github.com/users/webyneter/orgs"
  },
  "node_id": "MDU6SXNzdWUzNjE4NTYzMDA="
}